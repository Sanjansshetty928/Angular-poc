{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { map } from 'rxjs/operators';\nlet AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'app';\n    this.loadedPosts = [];\n    this.isFetching = true;\n  }\n  ngOnInit() {\n    this.fetchPosts();\n  }\n  onCreatePost(postData) {\n    // console.log(postData);\n    this.http.post(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\", postData).subscribe(responseData => {\n      console.log(responseData);\n    });\n    this.signupForm.reset();\n  }\n  onFetchPosts() {\n    this.fetchPosts();\n  }\n  onClearPosts() {}\n  fetchPosts() {\n    this.isFetching = true;\n    //RESPONSE WILL return as a body\n    this.http.get(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\").pipe(map(responseData => {\n      const postsArray = [];\n      for (const key in responseData) {\n        if (responseData.hasOwnProperty(key)) {\n          postsArray.push({\n            ...responseData[key],\n            id: key\n          });\n        }\n      }\n      return postsArray;\n    })).subscribe(posts => {\n      this.isFetching = false;\n      this.loadedPosts = posts;\n    });\n  }\n};\n__decorate([ViewChild('postForm', {\n  static: false\n})], AppComponent.prototype, \"signupForm\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAE5D,SAASC,GAAG,QAAQ,gBAAgB;AAO7B,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAWvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAVxB,UAAK,GAAG,KAAK;IAEb,gBAAW,GAAU,EAAE;IACvB,eAAU,GAAC,IAAI;EAOyB;EAHxCC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,YAAY,CAACC,QAAc;IACzB;IACA,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAgB,wEAAwE,EAAED,QAAQ,CAAC,CAACE,SAAS,CAACC,YAAY,IAAG;MACzIC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IAG3B,CAAC,CAAC;IACF,IAAI,CAACG,UAAU,CAACC,KAAK,EAAE;EAEzB;EACAC,YAAY;IACV,IAAI,CAACV,UAAU,EAAE;EAEnB;EACAW,YAAY,IAEZ;EACQX,UAAU;IAChB,IAAI,CAACY,UAAU,GAAC,IAAI;IACpB;IACA,IAAI,CAACd,IAAI,CAACe,GAAG,CAAsB,wEAAwE,CAAC,CAACC,IAAI,CAACnB,GAAG,CAAEU,YAAgC,IAAI;MACzJ,MAAMU,UAAU,GAAU,EAAE;MAC5B,KAAK,MAAMC,GAAG,IAAIX,YAAY,EAAE;QAC9B,IAAIA,YAAY,CAACY,cAAc,CAACD,GAAG,CAAC,EAAE;UACpCD,UAAU,CAACG,IAAI,CAAC;YAAC,GAAGb,YAAY,CAACW,GAAG,CAAC;YAAEG,EAAE,EAAEH;UAAG,CAAE,CAAC;;;MAGrD,OAAOD,UAAU;IAEnB,CAAC,CAAC,CAAC,CAACX,SAAS,CAACgB,KAAK,IAAG;MACpB,IAAI,CAACR,UAAU,GAAC,KAAK;MACrB,IAAI,CAACS,WAAW,GAACD,KAAK;IACxB,CAAC,CAAC;EACJ;CACD;AA5C2CE,YAAzC5B,SAAS,CAAC,UAAU,EAAE;EAAE6B,MAAM,EAAE;AAAK,CAAE,CAAC,gDAAqB;AAFnD3B,YAAY,eALxBH,SAAS,CAAC;EACT+B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACW9B,YAAY,CA8CxB;SA9CYA,YAAY","names":["Component","ViewChild","map","AppComponent","constructor","http","ngOnInit","fetchPosts","onCreatePost","postData","post","subscribe","responseData","console","log","signupForm","reset","onFetchPosts","onClearPosts","isFetching","get","pipe","postsArray","key","hasOwnProperty","push","id","posts","loadedPosts","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Sanjan.shetty\\OneDrive - Happiest Minds Technologies Limited\\Desktop\\Poc-angular\\app\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Post } from './post.model';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  @ViewChild('postForm', { static: false }) signupForm!: NgForm;\n  loadedPosts:Post[] = [];\n  isFetching=true;\n\n\n\n  ngOnInit() {\n    this.fetchPosts();\n  }\n  constructor(private http: HttpClient) { }\n  onCreatePost(postData: Post) {\n    // console.log(postData);\n    this.http.post<{name:string}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\", postData).subscribe(responseData => {\n      console.log(responseData);\n  \n\n    })  \n    this.signupForm.reset();  \n\n  }\n  onFetchPosts() {\n    this.fetchPosts();\n \n  }\n  onClearPosts(){\n    \n  }\n  private fetchPosts() {\n    this.isFetching=true;\n    //RESPONSE WILL return as a body\n    this.http.get<{[key:string]:Post}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\").pipe(map((responseData:{[key:string]:Post}) => {\n      const postsArray:Post[] = [];\n      for (const key in responseData) {\n        if (responseData.hasOwnProperty(key)) {\n          postsArray.push({...responseData[key], id: key });\n        }\n      }\n      return postsArray;\n\n    })).subscribe(posts => {\n      this.isFetching=false;\n      this.loadedPosts=posts;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}