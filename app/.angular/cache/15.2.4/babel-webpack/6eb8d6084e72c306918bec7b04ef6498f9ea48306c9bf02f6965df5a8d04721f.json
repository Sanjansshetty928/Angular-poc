{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(http, postService) {\n    this.http = http;\n    this.postService = postService;\n    this.title = 'app';\n    this.loadedPosts = [];\n    this.isFetching = false;\n    this.error = null;\n  }\n  ngOnInit() {\n    this.isFetching = true;\n    this.postService.fetchPosts().subscribe(posts => {\n      this.isFetching = false;\n      this.loadedPosts = posts;\n    });\n  }\n  onCreatePost(postData) {\n    this.postService.createAndStorePost(postData.title, postData.content);\n    // console.log(postData);\n    // this.http.post<{name:string}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\", postData).subscribe(responseData => {\n    //   console.log(responseData);\n    // })  \n    this.signupForm.reset();\n  }\n  onFetchPosts() {\n    this.postService.fetchPosts();\n    this.postService.fetchPosts().subscribe(posts => {\n      this.isFetching = false;\n      this.loadedPosts = posts;\n    });\n  }\n  onClearPosts() {\n    this.postService.deletePosts().subscribe(() => {\n      this.loadedPosts = [];\n    });\n  }\n};\n__decorate([ViewChild('postForm', {\n  static: false\n})], AppComponent.prototype, \"signupForm\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAUrD,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAgBvBC,YAAoBC,IAAgB,EAASC,WAAwB;IAAjD,SAAI,GAAJD,IAAI;IAAqB,gBAAW,GAAXC,WAAW;IAfxD,UAAK,GAAG,KAAK;IAEb,gBAAW,GAAU,EAAE;IACvB,eAAU,GAAC,KAAK;IAChB,UAAK,GAAC,IAAI;EAW+D;EAPzEC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAC,IAAI;IACpB,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,CAACC,SAAS,CAACC,KAAK,IAAE;MAC7C,IAAI,CAACH,UAAU,GAAC,KAAK;MACrB,IAAI,CAACI,WAAW,GAACD,KAAK;IACxB,CAAC,CAAC;EACJ;EAEAE,YAAY,CAACC,QAAc;IACzB,IAAI,CAACR,WAAW,CAACS,kBAAkB,CAACD,QAAQ,CAACE,KAAK,EAACF,QAAQ,CAACG,OAAO,CAAC;IACpE;IACA;IACA;IAGA;IACA,IAAI,CAACC,UAAU,CAACC,KAAK,EAAE;EAEzB;EACAC,YAAY;IACV,IAAI,CAACd,WAAW,CAACG,UAAU,EAAE;IAC7B,IAAI,CAACH,WAAW,CAACG,UAAU,EAAE,CAACC,SAAS,CAACC,KAAK,IAAE;MAC7C,IAAI,CAACH,UAAU,GAAC,KAAK;MACrB,IAAI,CAACI,WAAW,GAACD,KAAK;IACxB,CAAC,CAAC;EAEJ;EACAU,YAAY;IACV,IAAI,CAACf,WAAW,CAACgB,WAAW,EAAE,CAACZ,SAAS,CAAC,MAAI;MAC5C,IAAI,CAACE,WAAW,GAAC,EAAE;IAAA,CAAC,CAAC;EAGxB;CAkBD;AAzD2CW,YAAzCrB,SAAS,CAAC,UAAU,EAAE;EAAEsB,MAAM,EAAE;AAAK,CAAE,CAAC,gDAAqB;AAFnDrB,YAAY,eALxBF,SAAS,CAAC;EACTwB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWxB,YAAY,CA2DxB;SA3DYA,YAAY","names":["Component","ViewChild","AppComponent","constructor","http","postService","ngOnInit","isFetching","fetchPosts","subscribe","posts","loadedPosts","onCreatePost","postData","createAndStorePost","title","content","signupForm","reset","onFetchPosts","onClearPosts","deletePosts","__decorate","static","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Sanjan.shetty\\OneDrive - Happiest Minds Technologies Limited\\Desktop\\Poc-angular\\app\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Post } from './post.model';\nimport { PostsService } from './posts.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  @ViewChild('postForm', { static: false }) signupForm!: NgForm;\n  loadedPosts:Post[] = [];\n  isFetching=false;\n  error=null;\n\n\n\n  ngOnInit() {\n    this.isFetching=true;\n    this.postService.fetchPosts().subscribe(posts=>{\n      this.isFetching=false;\n      this.loadedPosts=posts;\n    });\n  }\n  constructor(private http: HttpClient,private postService:PostsService) { }\n  onCreatePost(postData: Post) {\n    this.postService.createAndStorePost(postData.title,postData.content)\n    // console.log(postData);\n    // this.http.post<{name:string}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\", postData).subscribe(responseData => {\n    //   console.log(responseData);\n  \n\n    // })  \n    this.signupForm.reset();  \n\n  }\n  onFetchPosts() {\n    this.postService.fetchPosts();\n    this.postService.fetchPosts().subscribe(posts=>{\n      this.isFetching=false;\n      this.loadedPosts=posts;\n    });\n \n  }\n  onClearPosts(){\n    this.postService.deletePosts().subscribe(()=>{\n     this.loadedPosts=[]});\n   \n    \n  }\n  // private fetchPosts() {\n  //   this.isFetching=true;\n  //   //RESPONSE WILL return as a body\n  //   this.http.get<{[key:string]:Post}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\").pipe(map((responseData:{[key:string]:Post}) => {\n  //     const postsArray:Post[] = [];\n  //     for (const key in responseData) {\n  //       if (responseData.hasOwnProperty(key)) {\n  //         postsArray.push({...responseData[key], id: key });\n  //       }\n  //     }\n  //     return postsArray;\n\n  //   })).subscribe(posts => {\n  //     this.isFetching=false;\n  //     this.loadedPosts=posts;\n  //   })\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}