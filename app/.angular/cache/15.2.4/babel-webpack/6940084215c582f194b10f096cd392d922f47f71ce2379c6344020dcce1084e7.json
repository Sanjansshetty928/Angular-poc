{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"postForm\"];\nfunction AppComponent_p_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No post available!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ul_26_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const posts_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(posts_r5.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(posts_r5.content);\n  }\n}\nfunction AppComponent_ul_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 15);\n    i0.ɵɵtemplate(1, AppComponent_ul_26_li_1_Template, 5, 2, \"li\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.loadedPosts);\n  }\n}\nfunction AppComponent_p_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Loading\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'app';\n    this.loadedPosts = [];\n    this.isFetching = true;\n  }\n  ngOnInit() {\n    this.fetchPosts();\n  }\n  onCreatePost(postData) {\n    // console.log(postData);\n    this.http.post(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\", postData).subscribe(responseData => {\n      console.log(responseData);\n    });\n    this.signupForm.reset();\n  }\n  onFetchPosts() {\n    this.fetchPosts();\n  }\n  onClearPosts() {}\n  fetchPosts() {\n    this.isFetching = true;\n    //RESPONSE WILL return as a body\n    this.http.get(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\").pipe(map(responseData => {\n      const postsArray = [];\n      for (const key in responseData) {\n        if (responseData.hasOwnProperty(key)) {\n          postsArray.push({\n            ...responseData[key],\n            id: key\n          });\n        }\n      }\n      return postsArray;\n    })).subscribe(posts => {\n      this.isFetching = false;\n      this.loadedPosts = posts;\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.signupForm = _t.first);\n    }\n  },\n  decls: 28,\n  vars: 4,\n  consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"postForm\", \"ngForm\"], [1, \"row\"], [1, \"col-md-6\"], [\"for\", \"\"], [\"type\", \"text\", \"name\", \"title\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"content\", \"ngModel\", \"\", 1, \"form-control\"], [1, \"col-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [4, \"ngIf\"], [\"class\", \"list-group\", 4, \"ngIf\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onCreatePost(_r0.value));\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 4)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(13, \"\\n\\u00A0\\n\");\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"button\", 9);\n      i0.ɵɵtext(16, \"Send post\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtext(17, \"\\n\\u00A0\\n\");\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_19_listener() {\n        return ctx.onFetchPosts();\n      });\n      i0.ɵɵtext(20, \" Fetch Posts \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_21_listener() {\n        return ctx.onClearPosts();\n      });\n      i0.ɵɵtext(22, \"Clear posts\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"div\", 12);\n      i0.ɵɵtemplate(25, AppComponent_p_25_Template, 2, 0, \"p\", 13);\n      i0.ɵɵtemplate(26, AppComponent_ul_26_Template, 2, 1, \"ul\", 14);\n      i0.ɵɵtemplate(27, AppComponent_p_27_Template, 2, 0, \"p\", 13);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"disabled\", ctx.loadedPosts.length < 1);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loadedPosts.length < 1 && !ctx.isFetching);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loadedPosts.length >= 1 && !ctx.isFetching);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isFetching);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;;;;;;IC2BhCC,yBAA+C;IAAAA,kCAAkB;IAAAA,iBAAI;;;;;IAEnEA,8BAA8D;IACxDA,YAAe;IAAAA,iBAAK;IACxBA,yBAAG;IAAAA,YAAiB;IAAAA,iBAAI;;;;IADpBA,eAAe;IAAfA,oCAAe;IAChBA,eAAiB;IAAjBA,sCAAiB;;;;;IAHxBA,8BAAoE;IAClEA,kEAGK;IACPA,iBAAK;;;;IAJ2CA,eAAc;IAAdA,4CAAc;;;;;IAK9DA,yBAAsB;IAAAA,uBAAO;IAAAA,iBAAI;;;AD3BrC,OAAM,MAAOC,YAAY;EAWvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAVxB,UAAK,GAAG,KAAK;IAEb,gBAAW,GAAU,EAAE;IACvB,eAAU,GAAC,IAAI;EAOyB;EAHxCC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,YAAY,CAACC,QAAc;IACzB;IACA,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAgB,wEAAwE,EAAED,QAAQ,CAAC,CAACE,SAAS,CAACC,YAAY,IAAG;MACzIC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IAG3B,CAAC,CAAC;IACF,IAAI,CAACG,UAAU,CAACC,KAAK,EAAE;EAEzB;EACAC,YAAY;IACV,IAAI,CAACV,UAAU,EAAE;EAEnB;EACAW,YAAY,IAEZ;EACQX,UAAU;IAChB,IAAI,CAACY,UAAU,GAAC,IAAI;IACpB;IACA,IAAI,CAACd,IAAI,CAACe,GAAG,CAAsB,wEAAwE,CAAC,CAACC,IAAI,CAACpB,GAAG,CAAEW,YAAgC,IAAI;MACzJ,MAAMU,UAAU,GAAU,EAAE;MAC5B,KAAK,MAAMC,GAAG,IAAIX,YAAY,EAAE;QAC9B,IAAIA,YAAY,CAACY,cAAc,CAACD,GAAG,CAAC,EAAE;UACpCD,UAAU,CAACG,IAAI,CAAC;YAAC,GAAGb,YAAY,CAACW,GAAG,CAAC;YAAEG,EAAE,EAAEH;UAAG,CAAE,CAAC;;;MAGrD,OAAOD,UAAU;IAEnB,CAAC,CAAC,CAAC,CAACX,SAAS,CAACgB,KAAK,IAAG;MACpB,IAAI,CAACR,UAAU,GAAC,KAAK;MACrB,IAAI,CAACS,WAAW,GAACD,KAAK;IACxB,CAAC,CAAC;EACJ;;AA7CWxB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA0B;EAAAC;IAAA;;;;;;;;;;;;;;MCVzB5B,8BAAuB;MACIA;QAAAA;QAAA;QAAA,OAAYA,0CAA4B;MAAA,EAAC;MACpEA,8BAAiB;MAECA,qBAAK;MAAAA,iBAAQ;MAC3BA,2BAA6D;MAC/DA,iBAAM;MAIRA,8BAAiB;MAECA,wBAAO;MAAAA,iBAAQ;MAC7BA,4BAA+D;MACjEA,iBAAM;MAIRA,2BACA;MAAAA,+BAAmB;MAC2BA,0BAAS;MAAAA,iBAAS;MAEhEA,2BACA;MAAAA,+BAAiB;MACiBA;QAAA,OAAS6B,kBAAc;MAAA,EAAC;MACtD7B,8BACF;MAAAA,iBAAS;MACXA,mCAA0F;MAAzBA;QAAA,OAAS6B,kBAAc;MAAA,EAAC;MAAC7B,4BAAW;MAAAA,iBAAS;MAC9GA,+BAAiB;MAEbA,4DAAqE;MACrEA,8DAKK;MACLA,4DAAiC;MACnCA,iBAAM;;;MAXuBA,gBAAiC;MAAjCA,qDAAiC;MAGxDA,eAAyC;MAAzCA,oEAAyC;MACrBA,eAA0C;MAA1CA,qEAA0C;MAM9DA,eAAgB;MAAhBA,qCAAgB","names":["map","i0","AppComponent","constructor","http","ngOnInit","fetchPosts","onCreatePost","postData","post","subscribe","responseData","console","log","signupForm","reset","onFetchPosts","onClearPosts","isFetching","get","pipe","postsArray","key","hasOwnProperty","push","id","posts","loadedPosts","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Sanjan.shetty\\OneDrive - Happiest Minds Technologies Limited\\Desktop\\Poc-angular\\app\\src\\app\\app.component.ts","C:\\Users\\Sanjan.shetty\\OneDrive - Happiest Minds Technologies Limited\\Desktop\\Poc-angular\\app\\src\\app\\app.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Post } from './post.model';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  @ViewChild('postForm', { static: false }) signupForm!: NgForm;\n  loadedPosts:Post[] = [];\n  isFetching=true;\n\n\n\n  ngOnInit() {\n    this.fetchPosts();\n  }\n  constructor(private http: HttpClient) { }\n  onCreatePost(postData: Post) {\n    // console.log(postData);\n    this.http.post<{name:string}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\", postData).subscribe(responseData => {\n      console.log(responseData);\n  \n\n    })  \n    this.signupForm.reset();  \n\n  }\n  onFetchPosts() {\n    this.fetchPosts();\n \n  }\n  onClearPosts(){\n    \n  }\n  private fetchPosts() {\n    this.isFetching=true;\n    //RESPONSE WILL return as a body\n    this.http.get<{[key:string]:Post}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\").pipe(map((responseData:{[key:string]:Post}) => {\n      const postsArray:Post[] = [];\n      for (const key in responseData) {\n        if (responseData.hasOwnProperty(key)) {\n          postsArray.push({...responseData[key], id: key });\n        }\n      }\n      return postsArray;\n\n    })).subscribe(posts => {\n      this.isFetching=false;\n      this.loadedPosts=posts;\n    })\n  }\n}\n","<div class=\"container\">\n  <form #postForm=\"ngForm\" (ngSubmit)=\"onCreatePost(postForm.value)\">\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <label for=\"\">Title</label>\n    <input type=\"text\" class=\"form-control\" name=\"title\" ngModel>\n  </div>\n\n\n</div>\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <label for=\"\">Content</label>\n    <input type=\"text\" class=\"form-control\" name=\"content\" ngModel>\n  </div>\n\n\n</div>\n&nbsp;\n<div class=\"col-2\">\n<button type=\"submit\" class=\"btn btn-success\">Send post</button></div>\n</form>\n&nbsp;\n<div class=\"row\">\n  <button class=\"btn btn-primary\" (click)=\"onFetchPosts()\">\n    Fetch Posts\n  </button>\n<button class=\"btn btn-danger\" [disabled]=\"loadedPosts.length<1\" (click)=\"onClearPosts()\">Clear posts</button> </div>\n<div class=\"row\">\n  <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n    <p *ngIf=\"loadedPosts.length<1 && !isFetching\">No post available!</p>\n    <ul class=\"list-group\" *ngIf=\"loadedPosts.length>=1 && !isFetching\">\n      <li class=\"list-group-item\" *ngFor=\"let posts of loadedPosts\">\n        <h3>{{posts.title}}</h3>\n        <p>{{posts.content}}</p>\n      </li>\n    </ul>\n    <p *ngIf=\"isFetching\">Loading</p>\n  </div>\n</div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}