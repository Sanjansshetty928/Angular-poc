{"ast":null,"code":"import { map, catchError } from 'rxjs/operators';\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PostsService {\n  constructor(http) {\n    this.http = http;\n    // @ViewChild('postForm', { static: false }) signupForm!: NgForm;\n    this.error = new Subject();\n  }\n  createAndStorePost(title, content) {\n    const postData = {\n      title: title,\n      content: content\n    };\n    this.http.post(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\", postData).subscribe(responseData => {\n      console.log(responseData);\n    }, error => {\n      this.error.next(error.message);\n    });\n  }\n  fetchPosts() {\n    return this.http.get(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\").pipe(map(responseData => {\n      const postsArray = [];\n      for (const key in responseData) {\n        if (responseData.hasOwnProperty(key)) {\n          postsArray.push({\n            ...responseData[key],\n            id: key\n          });\n        }\n      }\n      return postsArray;\n    }), catchError(errorRes => {}));\n  }\n  deletePosts() {\n    return this.http.delete(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\");\n  }\n}\nPostsService.ɵfac = function PostsService_Factory(t) {\n  return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n};\nPostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostsService,\n  factory: PostsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAQA,GAAG,EAACC,UAAU,QAAM,gBAAgB;AAC5C,SAASC,OAAO,QAAmB,MAAM;;;AAGzC,OAAM,MAAOC,YAAY;EAIrBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAHxB;IACA,UAAK,GAAC,IAAIH,OAAO,EAAU;EAEU;EACrCI,kBAAkB,CAACC,KAAY,EAACC,OAAc;IAC1C,MAAMC,QAAQ,GAAM;MAACF,KAAK,EAACA,KAAK;MAACC,OAAO,EAACA;IAAO,CAAC;IACjD,IAAI,CAACH,IAAI,CAACK,IAAI,CAAgB,wEAAwE,EAAED,QAAQ,CAAC,CAACE,SAAS,CAACC,YAAY,IAAG;MACvIC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IAG3B,CAAC,EAACG,KAAK,IAAE;MACP,IAAI,CAACA,KAAK,CAACC,IAAI,CAACD,KAAK,CAACE,OAAO,CAAC;IAChC,CAAC,CAAC;EAIR;EACAC,UAAU;IACN,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAsB,wEAAwE,CAAC,CAACC,IAAI,CAACpB,GAAG,CAAEY,YAAgC,IAAI;MACpK,MAAMS,UAAU,GAAU,EAAE;MAC5B,KAAK,MAAMC,GAAG,IAAIV,YAAY,EAAE;QAC9B,IAAIA,YAAY,CAACW,cAAc,CAACD,GAAG,CAAC,EAAE;UACpCD,UAAU,CAACG,IAAI,CAAC;YAAC,GAAGZ,YAAY,CAACU,GAAG,CAAC;YAAEG,EAAE,EAAEH;UAAG,CAAE,CAAC;;;MAGrD,OAAOD,UAAU;IAEnB,CAAC,CAAC,EACFpB,UAAU,CAACyB,QAAQ,IAAE,CAGrB,CAAC,CAAC,CAAC;EACH;EACAC,WAAW;IACR,OAAO,IAAI,CAACtB,IAAI,CAACuB,MAAM,CAAC,wEAAwE,CAAC;EACpG;;AApCSzB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA0B,SAAZ1B,YAAY;EAAA2B,YADD;AAAM","names":["map","catchError","Subject","PostsService","constructor","http","createAndStorePost","title","content","postData","post","subscribe","responseData","console","log","error","next","message","fetchPosts","get","pipe","postsArray","key","hasOwnProperty","push","id","errorRes","deletePosts","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Sanjan.shetty\\OneDrive - Happiest Minds Technologies Limited\\Desktop\\Poc-angular\\app\\src\\app\\posts.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, ViewChild } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Post } from \"./post.model\";\r\nimport {map,catchError} from'rxjs/operators';\r\nimport { Subject,throwError } from \"rxjs\";\r\n\r\n@Injectable({providedIn:'root'})\r\nexport class PostsService{\r\n    // @ViewChild('postForm', { static: false }) signupForm!: NgForm;\r\n    error=new Subject<string>();\r\n\r\n    constructor(private http:HttpClient){}\r\n    createAndStorePost(title:string,content:string){\r\n        const postData:Post={title:title,content:content}\r\n        this.http.post<{name:string}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\", postData).subscribe(responseData => {\r\n            console.log(responseData);\r\n        \r\n      \r\n          },error=>{\r\n            this.error.next(error.message);\r\n          })  \r\n          \r\n      \r\n\r\n    }\r\n    fetchPosts(){\r\n        return this.http.get<{[key:string]:Post}>(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\").pipe(map((responseData:{[key:string]:Post}) => {\r\n      const postsArray:Post[] = [];\r\n      for (const key in responseData) {\r\n        if (responseData.hasOwnProperty(key)) {\r\n          postsArray.push({...responseData[key], id: key });\r\n        }\r\n      }\r\n      return postsArray;\r\n\r\n    }),\r\n    catchError(errorRes=>{\r\n\r\n\r\n    }))\r\n    }\r\n    deletePosts(){\r\n       return this.http.delete(\"https://ng-complete-guide-4db6b-default-rtdb.firebaseio.com/posts.json\")\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}